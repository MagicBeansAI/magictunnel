# nginx Configuration for MCP Proxy with TLS Termination
# This configuration provides TLS termination for the MCP Proxy

# Upstream configuration for MCP Proxy
upstream mcp_proxy {
    # Primary server
    server magictunnel:3000 max_fails=3 fail_timeout=30s;
    
    # Additional servers for load balancing (uncomment as needed)
    # server magictunnel-2:3000 max_fails=3 fail_timeout=30s;
    # server magictunnel-3:3000 max_fails=3 fail_timeout=30s;
    
    # Health check (nginx plus feature)
    # health_check interval=10s fails=3 passes=2;
    
    # Load balancing method
    # least_conn;  # Use least connections
    # ip_hash;     # Use client IP hash for session affinity
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name magictunnel.example.com;
    
    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    server_name magictunnel.example.com;
    
    # SSL Configuration
    ssl_certificate /etc/ssl/certs/magictunnel.crt;
    ssl_certificate_key /etc/ssl/private/magictunnel.key;
    # ssl_certificate /etc/ssl/certs/ca-bundle.crt;  # Certificate chain (if separate)
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/ssl/certs/ca-bundle.crt;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self' wss:; frame-ancestors 'none';" always;
    
    # Logging
    access_log /var/log/nginx/magictunnel.access.log;
    error_log /var/log/nginx/magictunnel.error.log;
    
    # Client settings
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        application/json
        application/javascript
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Health check endpoint (bypass proxy for nginx health)
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # WebSocket endpoint with special handling
    location /mcp/ws {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://mcp_proxy;
        
        # WebSocket upgrade headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Essential headers for MCP Proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Authentication headers (preserve all auth headers)
        proxy_set_header Authorization $http_authorization;
        proxy_set_header X-API-Key $http_x_api_key;
        
        # WebSocket specific timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 86400s;  # 24 hours for long-lived connections
        
        # Buffer settings for WebSocket
        proxy_buffering off;
        proxy_cache off;
    }
    
    # Server-Sent Events endpoint
    location /mcp/stream {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://mcp_proxy;
        
        # SSE specific headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
        
        # SSE requires no buffering
        proxy_buffering off;
        proxy_cache off;
        proxy_read_timeout 86400s;
        
        # SSE headers
        add_header Cache-Control "no-cache";
        add_header X-Accel-Buffering "no";
    }
    
    # Authentication endpoints (stricter rate limiting)
    location ~ ^/auth/ {
        limit_req zone=auth burst=5 nodelay;
        
        proxy_pass http://mcp_proxy;
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header Authorization $http_authorization;
        
        # Timeouts for auth endpoints
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # API endpoints
    location /mcp/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://mcp_proxy;
        
        # Essential headers for MCP Proxy inspection
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Authentication and custom headers
        proxy_set_header Authorization $http_authorization;
        proxy_set_header X-API-Key $http_x_api_key;
        proxy_set_header X-Client-ID $http_x_client_id;
        proxy_set_header User-Agent $http_user_agent;
        
        # Standard timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://mcp_proxy;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Quick timeout for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        access_log off;  # Don't log health checks
    }
    
    # Metrics endpoint (if enabled)
    location /metrics {
        # Restrict access to monitoring systems
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://mcp_proxy;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        access_log off;
    }
    
    # Default location for all other requests
    location / {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://mcp_proxy;
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header Authorization $http_authorization;
        
        # Standard timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# Additional server block for internal monitoring (optional)
server {
    listen 8080;
    server_name localhost;
    
    # nginx status page
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        deny all;
    }
    
    # Upstream status (nginx plus feature)
    # location /upstream_status {
    #     upstream_conf;
    #     allow 127.0.0.1;
    #     allow 10.0.0.0/8;
    #     deny all;
    # }
}
